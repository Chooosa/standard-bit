{"version":3,"sources":["App.styles.tsx","components/Header/header.styles.tsx","assets/logo.svg","components/Header/header.components.tsx","pages/Main/main.styles.tsx","components/WalletInfo/wallet-info.styles.tsx","components/WalletInfo/wallet-info.components.tsx","components/CryptocurrencyTable/cryptocurrency-table.styles.tsx","components/CryptocurrencyTable/Row/row.styles.tsx","components/CryptocurrencyTable/Row/row.component.tsx","components/CryptocurrencyTable/cryptocurrency-table.components.tsx","components/Select/select.styles.tsx","components/Select/select.component.tsx","pages/Main/main.components.tsx","config.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppWrapper","styled","div","AppContainer","Wrapper","header","Logo","img","Header","href","src","logoSVG","main","section","Container","Row","Text","span","props","description","WalletInfo","data","useState","balance","frozen","available","sum","setSum","useEffect","console","log","sumBalance","reduce","current","price","sumFrozen","sumAvailable","getSum","toFixed","Table","table","Cell","th","RowWrapper","tr","td","change","CellContainer","Icon","item","dataChanges","coin_img","coin_name","coin","CryptocurrencyTable","oldData","changeData","oldValues","newValues","changes","map","index","SelectButton","button","OptionButton","PopoverContainer","Select","anchorEl","popoverClose","showSelect","user","changeUser","open","Boolean","id","undefined","onClick","e","Popover","elevation","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Main","setData","setOldData","setAnchorEl","setUser","getData","axios","method","url","then","response","catch","error","setInterval","length","event","currentTarget","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9c88f6c.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const AppWrapper = styled.div`\n   width: 100vw;\n   min-height: 100vh;\n   background-color: #19191B;\n   padding: 0 75px;\n`\n\nexport const AppContainer = styled.div`\n   width: 100%;\n   height: 100%;\n   max-width: 1050px;\n`","import styled from 'styled-components'\n\nexport const Wrapper = styled.header`\n   width: 100%;\n   padding-top: 32px;\n`\n\nexport const Logo = styled.img`\n\n`","export default __webpack_public_path__ + \"static/media/logo.cce9d749.svg\";","import React from 'react'\n\nimport { Wrapper, Logo } from './header.styles'\nimport logoSVG from '../../assets/logo.svg'\n\nconst Header = () => {\n   return (\n      <Wrapper>\n         <a href=\"https://sbit500.pro/\">\n            <Logo src={logoSVG} />\n         </a>\n      </Wrapper>\n   )\n}\n\nexport default Header","import styled from 'styled-components'\n\nexport const Wrapper = styled.main`\n   padding: 100px 0;\n   width: 100%;\n   height: 100%;\n`","import styled from 'styled-components'\n\nexport const Wrapper = styled.section`\n   width: 100%;\n   margin-bottom: 20px;\n`\n\nexport const Container = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n   width: 100%;\n   max-width: 450px;\n`\n\nexport const Row = styled.div`\n   display: flex;\n   justify-content: space-between;\n   width: 100%;\n   :nth-of-type(2) {\n      margin: 20px 0;\n   }\n`\n\ninterface TextProps {\n   description?: boolean\n}\n\nexport const Text = styled.span<TextProps>`\n   font-size: 18px;\n   line-height: 21px;\n   color: #fff;\n   opacity: ${props => props.description ? '0.5' : '1'};\n`","import React, { useEffect, useState } from 'react'\nimport { DataTypes } from '../../pages/Main/main.components'\n\nimport { Wrapper, Container, Row, Text } from './wallet-info.styles'\n\ninterface WalletInfoProps {\n   data: DataTypes[]\n}\n\ninterface SumProps {\n   balance: number\n   frozen: number\n   available: number\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ data }) => {\n\n   const [sum, setSum] = useState<SumProps>({\n      balance: 0,\n      frozen: 0,\n      available: 0\n   })\n\n   const getSum = () => {\n      console.log('dfd')\n      let sumBalance: number = data.reduce((sum, current) => {\n         return sum + (+current.balance * +current.price);\n      }, 0);\n\n      let sumFrozen: number = data.reduce((sum, current) => {\n         return sum + (+current.frozen * +current.price);\n      }, 0);\n\n      let sumAvailable: number = data.reduce((sum, current) => {\n         return sum + (+current.available * +current.price);\n      }, 0);\n      // console.log(summ)\n      // return summ\n      setSum({\n         balance: sumBalance,\n         frozen: sumFrozen,\n         available: sumAvailable\n      })\n   }\n\n   useEffect(() => {\n      getSum()\n   }, [data])\n\n   return (\n      <Wrapper>\n         <Container>\n            <Row>\n               <Text description>\n                  Общий баланс (сумма):\n               </Text>\n               <Text>\n                  {sum.balance.toFixed(2)} USDT\n               </Text>\n            </Row>\n            <Row>\n               <Text description>\n                  В ордерах (сумма):\n               </Text>\n               <Text>\n                  {sum.frozen.toFixed(2)} USDT\n               </Text>\n            </Row>\n            <Row>\n               <Text description>\n                  Свободный объем (сумма):\n               </Text>\n               <Text>\n                  {sum.available.toFixed(2)} USDT\n               </Text>\n            </Row>\n         </Container>\n      </Wrapper>\n   )\n}\n\nexport default WalletInfo","import styled from 'styled-components'\n\nexport const Wrapper = styled.section`\n   display: flex;\n   flex-direction: column;\n   align-items: flex-end;\n`\n\nexport const Table = styled.table`\n   width: 100%;\n   background-color: #303030;\n   border-radius: 16px;\n   border-collapse: collapse;\n`\n\nexport const Cell = styled.th`\n   padding: 26px 24px;\n   font-size: 14px;\n   line-height: 19px;\n   color: rgba(255, 255, 255, 0.5);\n   width: 19%;\n   position: relative;\n\n   :nth-of-type(2n) {\n      background-color: rgb(59, 59, 59);\n   }\n\n   :first-of-type {\n      width: 24%;\n      text-align: left;\n\n      ::before {\n         left: 20px;\n         width: calc(100% - 20px);\n      }\n   }\n\n   :last-of-type::before {\n      right: 20px;\n      width: calc(100% - 20px);\n   }\n\n   ::before {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n\n      width: 100%;\n      height: 2px;\n      background-color: red;\n      z-index: 100;\n\n      background-color: #fff;\n      opacity: 0.1;\n   }\n`","import styled from 'styled-components'\n\nexport const RowWrapper = styled.tr`\n   /* border-bottom: 2px solid red; */\n   :last-of-type {\n      >td::before {\n         opacity: 0;\n      }\n   }\n`\n\ninterface CellProps {\n   change?: string\n}\n\nexport const Cell = styled.td<CellProps>`\n   padding: 22px 24px;\n   font-size: 16px;\n   line-height: 19px;\n   color: ${props => props.change === 'up' ? '#4CAA3C' : props.change === 'down' ? '#DF2828' : '#fff'};\n   width: 19%;\n   text-align: center;\n   position: relative;\n\n   :first-of-type {\n      width: 24%;\n      text-align: left;\n\n      background: -webkit-linear-gradient(#FFCB44, #F89521);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n\n      ::before {\n         left: 20px;\n         width: calc(100% - 20px);\n      }\n   }\n\n   :last-of-type::before {\n      right: 20px;\n      width: calc(100% - 20px);\n   }\n\n   :nth-of-type(2n) {\n      background-color: rgb(59, 59, 59);\n   }\n\n   ::before {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n\n      width: 100%;\n      height: 2px;\n      background-color: red;\n      z-index: 100;\n\n      background-color: #fff;\n      opacity: 0.1;\n   }\n`\n\nexport const CellContainer = styled.div`\n   display: flex;\n   align-items: center;\n`\n\nexport const Icon = styled.img`\n   margin-right: 14px;\n   margin-left: 9px;\n   width: 20px;\n   height: 20px;\n`","import React from 'react'\n\nimport { RowWrapper, Cell, Icon, CellContainer } from './row.styles'\nimport { DataTypes } from '../../../pages/Main/main.components'\nimport { DataChangesTypes } from '../cryptocurrency-table.components'\n\ninterface RowProps {\n   item: DataTypes,\n   dataChanges: DataChangesTypes\n}\n\nconst Row: React.FC<RowProps> = ({ item, dataChanges }) => {\n   return (\n      <RowWrapper>\n         <Cell>\n            <CellContainer>\n               <Icon src={item.coin_img} />\n               {`${item.coin_name} (${item.coin})`}\n            </CellContainer>\n         </Cell>\n         <Cell change={dataChanges.price}>\n            {/* {console.log(dataChanges.price)} */}\n            {item.price}\n         </Cell>\n         <Cell change={dataChanges.balance}>\n            {item.balance}\n         </Cell>\n         <Cell change={dataChanges.frozen}>\n            {item.frozen}\n         </Cell>\n         <Cell change={dataChanges.available}>\n            {item.available}\n         </Cell>\n      </RowWrapper>\n   )\n}\n\nexport default Row","import React from 'react'\n\nimport { Wrapper, Table, Cell } from './cryptocurrency-table.styles'\nimport { DataTypes } from '../../pages/Main/main.components'\nimport Row from './Row/row.component'\n\ninterface CryptocurrencyTableProps {\n   data: DataTypes[]\n   oldData: DataTypes[]\n}\n\nexport interface DataChangesTypes {\n   price: string\n   balance: string\n   frozen: string\n   available: string\n}\n\nconst CryptocurrencyTable: React.FC<CryptocurrencyTableProps> = ({ data, oldData }) => {\n   // const [dataChanges, setDataChanges] = useState<DataChangesTypes>({\n   //    price: 'same',\n   //    balance: 'same',\n   //    frozen: 'same',\n   //    available: 'same'\n   // })\n\n   const changeData = (oldValues: DataTypes, newValues: DataTypes) => {\n      let changes: DataChangesTypes = {\n         price: 'same',\n         balance: 'same',\n         frozen: 'same',\n         available: 'same'\n      }\n\n      if (oldValues) {\n         if (oldValues?.price > newValues.price) {\n            changes.price = 'down'\n         } else if (oldValues?.price < newValues.price) {\n            changes.price = 'up'\n         } else {\n            changes.price = 'same'\n         }\n\n         if (oldValues?.balance > newValues.balance) {\n            changes.balance = 'down'\n         } else if (oldValues?.balance < newValues.balance) {\n            changes.balance = 'up'\n         } else {\n            changes.balance = 'same'\n         }\n\n         if (oldValues?.frozen > newValues.frozen) {\n            changes.frozen = 'down'\n         } else if (oldValues?.frozen < newValues.frozen) {\n            changes.price = 'up'\n         } else {\n            changes.frozen = 'same'\n         }\n\n         if (oldValues?.available > newValues.available) {\n            changes.available = 'down'\n         } else if (oldValues?.available < newValues.available) {\n            changes.available = 'up'\n         } else {\n            changes.available = 'same'\n         }\n      }\n\n      // setDataChanges(changes)\n      return changes\n   }\n\n   return (\n      <Wrapper>\n         <Table>\n            <thead>\n               <tr>\n                  <Cell>\n                     Монета\n                  </Cell>\n                  <Cell>\n                     <span>Курс к USDT</span>\n                  </Cell>\n                  <Cell>\n                     Общий баланс\n                  </Cell>\n                  <Cell>\n                     В ордерах\n                  </Cell>\n                  <Cell>\n                     Свободный объем\n                  </Cell>\n               </tr>\n            </thead>\n            <tbody>\n               {\n                  data.map((item, index) => {\n                     // console.log(typeof (oldData[index].price))\n                     // if (item?.price > oldData[index]?.price) {\n                     //    console.log(item?.price, ' : ', oldData[index]?.price)\n                     // } else if (item?.price < oldData[index]?.price) {\n                     //    console.log(item?.price, ' : ', oldData[index]?.price)\n                     // }\n                     // console.log('map: ', changeData(oldData[index], item))\n                     return (\n                        <Row\n                           key={index}\n                           item={item}\n                           dataChanges={changeData(oldData[index], item)}\n                        />\n                     )\n                  })\n               }\n            </tbody>\n         </Table>\n      </Wrapper>\n   )\n}\n\nexport default CryptocurrencyTable","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n   width: 100%;\n   margin-bottom: 25px;\n\n   display: flex;\n   justify-content: flex-end;\n`\n\ninterface SelectButtonProps {\n   open: boolean\n}\n\nexport const SelectButton = styled.button`\n   outline: none;\n   background: #303030;\n   border-radius: 30px;\n   border: none;\n\n   width: 221px;\n   height: 50px;\n\n   font-size: 18px;\n   line-height: 30px;\n   letter-spacing: 0.44px;\n\n   color: #FFFFFF;\n   cursor: pointer;\n`\n\nexport const OptionButton = styled.button`\n   outline: none;\n   background: #fff;\n   border: none;\n   color: #19191B;\n   font-size: 18px;\n   line-height: 30px;\n   letter-spacing: 0.44px;\n\n   display: flex;\n   align-items: center;\n   padding: 0 10px;\n\n   width: 100%;\n   height: 50px;\n\n   transition-duration: 0.3s;\n   cursor: pointer;\n\n   :hover {\n      transition-duration: 0.3s;\n      background-color: #19191B;\n      color: #fff;\n   }\n`\n\nexport const PopoverContainer = styled.div`\n   width: 220px;\n   height: 100px;\n   /* margin-top: 8px; */\n\n   display: flex;\n   flex-direction: column;\n   /* >div {\n      width: 100%;\n      height: calc(100% - 15px);\n      flex-direction: column;\n      justify-content: space-between;\n   } */\n`","import React from 'react'\nimport Popover from '@material-ui/core/Popover';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport {\n   Wrapper,\n   SelectButton,\n   OptionButton,\n   PopoverContainer\n} from './select.styles'\n\ninterface SelectProps {\n   anchorEl: any\n   popoverClose: () => void\n   showSelect: (event: any) => void\n   user: number\n   changeUser: (user: number) => void\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n   return <Zoom ref={ref} />;//{...props}\n});\n\nconst Select: React.FC<SelectProps> = ({\n   anchorEl,\n   popoverClose,\n   showSelect,\n   user,\n   changeUser\n}) => {\n   const open = Boolean(anchorEl);\n   const id = open ? 'simple-popover' : undefined;\n\n   return (\n      <Wrapper>\n         <SelectButton onClick={(e) => showSelect(e)}>\n            Пользователь {user}\n         </SelectButton>\n         <Popover\n            id={id}\n            open={open}\n            elevation={8}\n            anchorEl={anchorEl}\n            onClose={popoverClose}\n            anchorOrigin={{\n               vertical: 'bottom',\n               horizontal: 'center',\n            }}\n            transformOrigin={{\n               vertical: 'top',\n               horizontal: 'center',\n            }}\n         // TransitionComponent={Transition}\n         >\n            <PopoverContainer>\n               <OptionButton onClick={() => changeUser(1)}>Пользователь 1</OptionButton>\n               <OptionButton onClick={() => changeUser(2)}>Пользователь 2</OptionButton>\n            </PopoverContainer>\n         </Popover>\n      </Wrapper>\n   )\n}\n\nexport default Select","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport { Wrapper } from './main.styles'\nimport WalletInfo from '../../components/WalletInfo/wallet-info.components'\nimport CryptocurrencyTable from '../../components/CryptocurrencyTable/cryptocurrency-table.components'\nimport { API_URL } from '../../config'\nimport Select from '../../components/Select/select.component'\n\nexport interface DataTypes {\n   id: string\n   id_user: string\n   coin: string\n   coin_img: string\n   balance: string\n   available: string\n   frozen: string\n   price: string\n   coin_name: string\n}\n\nconst Main = () => {\n   const [data, setData] = useState<DataTypes[]>([])\n   const [oldData, setOldData] = useState<DataTypes[]>([])\n   const [anchorEl, setAnchorEl] = useState(null)\n   const [user, setUser] = useState<number>(1)\n\n   const showSelect = (event: any) => {\n      setAnchorEl(event.currentTarget)\n   };\n\n   const popoverClose = () => {\n      setAnchorEl(null)\n   }\n\n   const changeUser = (user: number) => {\n      setUser(user)\n      setAnchorEl(null)\n   }\n\n   const getData = () => {\n      // console.log('change')\n      axios({\n         method: 'get',\n         url: `${API_URL}/testjob?id_user=${user}`\n      })\n         .then((response) => {\n            // console.log(response.data)\n            setData(response.data)\n         })\n         .catch((error) => {\n            console.log(error)\n         })\n   }\n\n   useEffect(() => {\n      getData()\n      setInterval(() => getData(), 10000)\n   }, [])\n\n   useEffect(() => {\n      if (data.length !== 0) {\n         setOldData(data)\n         // console.log('dfdf')\n      }\n   }, [data])\n\n   return (\n      <Wrapper>\n         <WalletInfo data={data} />\n         <Select\n            anchorEl={anchorEl}\n            popoverClose={popoverClose}\n            showSelect={showSelect}\n            user={user}\n            changeUser={changeUser}\n         />\n         <CryptocurrencyTable data={data} oldData={oldData} />\n      </Wrapper>\n   )\n}\n\nexport default Main","export const API_URL = process.env.NODE_ENV === 'production' ?\n   'http://api.sbit500.pro/api'\n   : ''","import React from 'react';\n\nimport { AppWrapper, AppContainer } from './App.styles'\nimport Header from './components/Header/header.components';\nimport Main from './pages/Main/main.components'\n\nfunction App() {\n  return (\n    <AppWrapper>\n      <Header />\n      <AppContainer>\n        <Main />\n      </AppContainer>\n    </AppWrapper>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}